package model.Car

import java.io.Serializable
import java.lang.ref.WeakReference
import java.util.UUID
import model.EnvObjects
import model.Graph
import model.PositionedObjects
import model.math.Point2i
import model.math.Point2f

class CarObject implements Serializable extends PositionedObjects {
	//var position : Point2i
	var frustum = 50f
	var vitesse : float
	var CarIcon : String
	var directionChanged = false
	var id = UUID::randomUUID
	var influence = new Point2f(1f,0f)
	transient val road : WeakReference<EnvObjects>
		
	var influenceDone = false
	new {
		length = 5f
		
		road = null
	}
		
	new (road : Graph) {
		position = new Point2f(0,0)
		this.road = new WeakReference(road)
		length = 5f
	}
	
	def setDirectionChanged(b : boolean) {
		directionChanged=b
	}

	def getDirectionChanged : boolean {
		return directionChanged
	}
	
	def setInfluenceDone(b : boolean) {
		influenceDone = b
	}

	def getInfluenceDone : boolean {
		return influenceDone
	}
	
	new (x : int, y : int, road : Graph) {
		this.position = new Point2f(x, y)
		this.road = new WeakReference(road)
		length = 5f
	}
	new (x : float) {
		this.position = new Point2f(x, 0)
		length =5f
		this.road = null // TO DO remove it the agent should be affected to a road 
	}
	
	new (position : Point2i, road : Graph) {
		this(position.x, position.y, road)
		length = 5f
	}

	def setCarPosition(pos : Point2f) {
		this.position = pos
	}
	def getCarPosition : Point2f {
		this.position
	}
	def getVitesse : float {
		return this.vitesse
	}
	def getFrustum : float{
		return this.frustum
	}
	def setVitesse(v : float) {
		this.vitesse = v
	}
	def getRoad : WeakReference {
		return this.road
	}
	def getCarIcon : String {
		return this.CarIcon
	}
	def getUID : UUID {
		return this.id
	}

	def equals(o : CarObject) : boolean {
		if (this.id == o.id) {
			return true
		}
		return false
	}
}

