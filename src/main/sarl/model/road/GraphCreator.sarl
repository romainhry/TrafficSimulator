package model.road

import model.Graph
import model.GraphNode

class GraphCreator {
	
	
	static val roadWidth = 15

	//---------------------------------------------------------------------------------------- //
	// --------------------------- You can create your own city here---------------------------//
	//---------------------------------------------------------------------------------------- //
	
	
	static def city1 : Graph {

		//---------------------------------------------------------------------------------------- //
		//------Create your node with a length for the model, and 2 UI coordinates in an array-----//
		//---------------------------------------------------------------------------------------- //
		var graph = new Graph
		var node1 = new GraphNode(400, false, #[200, 100, 600, 100])
		var node2 = new GraphNode(400 + 2 * roadWidth, false,
			#[600 + roadWidth, 100 - roadWidth, 200 - roadWidth, 100 - roadWidth])
		var node3 = new GraphNode(200, false,true, #[600, 100, 600, 300])
		var node4 = new GraphNode(200+roadWidth, false,true, #[600+roadWidth, 300, 600+roadWidth, 100-roadWidth])
		//cross
		var node5 = new GraphNode(200+roadWidth, false,true, #[600, 300+roadWidth, 600, 500+roadWidth])
		var node6 = new GraphNode(200-roadWidth, false,true, #[600+roadWidth, 500, 600+roadWidth, 300+roadWidth])
		var node7 = new GraphNode(400, false, #[600, 500+roadWidth, 1000, 500+roadWidth])
		var node8 = new GraphNode(400-roadWidth, false, #[1000, 500, 600+roadWidth, 500])
		var node9 = new GraphNode(200, false, true, #[1000 + roadWidth, 500, 1000 + roadWidth, 300])	
		var node10 = new GraphNode(200 - roadWidth, false, true, #[1000, 300 + roadWidth, 1000, 500])	
		var node11 = new GraphNode(400, false, #[1000 + roadWidth, 300, 600 + roadWidth, 300])
		var node12 = new GraphNode(400 - roadWidth, false, #[600 + roadWidth, 300 + roadWidth, 1000, 300 + roadWidth])
		var node13 = new GraphNode(400, false, #[600, 300, 200, 300])		
		var node14 = new GraphNode(400 + roadWidth, false, #[200 - roadWidth, 300 + roadWidth, 600, 300 + roadWidth])
		var node15 = new GraphNode(200, false, true, #[200, 300, 200, 100])
		var node16 = new GraphNode(200+2*roadWidth, false,true, #[200-roadWidth, 100-roadWidth, 200-roadWidth, 300+roadWidth])
		var node17 = new GraphNode(200, false, #[0, 100, 200 , 100])
		var node18 = new GraphNode(200-roadWidth, false, #[1200, 500, 1000+roadWidth, 500])
		var node19 = new GraphNode(200-roadWidth, true, #[200-roadWidth, 100-roadWidth, 0, 100-roadWidth])
		var node20 = new GraphNode(200-roadWidth, true, #[1000+roadWidth, 500+roadWidth, 1200, 500+roadWidth])
		graph.add(node1)
		graph.add(node2)
		graph.add(node3)
		graph.add(node4)
		graph.add(node5)
		graph.add(node6)
		graph.add(node7)
		graph.add(node8)
		graph.add(node9)
		graph.add(node10)
		graph.add(node11)
		graph.add(node12)
		graph.add(node13)
		graph.add(node14)
		graph.add(node15)
		graph.add(node16)
		graph.add(node17)
		graph.add(node18)
		graph.add(node19)
		graph.add(node20)

		//---------------------------------------------------------------------------------------- //
		// -------------------Add the connection between nodes, and the conflict nodes-------------//
		//---------------------------------------------------------------------------------------- //
		node1.addFrontNeighbour(node3)
		node3.addFrontNeighbour(node5)
		node3.addFrontNeighbour(node12)
		node3.addFrontNeighbour(node13)
		node3.addConflictFrontNeighbour(node11)
		node3.addConflictFrontNeighbour(node6)
		node3.addConflictFrontNeighbour(node14)
		node5.addFrontNeighbour(node7)
		node7.addFrontNeighbour(node9)
		node7.addFrontNeighbour(node20) 
		node7.addConflictFrontNeighbour(node18)
		node9.addFrontNeighbour(node11)
		node11.addFrontNeighbour(node13)
		node11.addFrontNeighbour(node5)
		node11.addFrontNeighbour(node4)
		node11.addConflictFrontNeighbour(node6)
		node11.addConflictFrontNeighbour(node14)
		node11.addConflictFrontNeighbour(node3)
		node13.addFrontNeighbour(node15)
		node15.addFrontNeighbour(node1)
		node15.addFrontNeighbour(node19)
		node15.addConflictFrontNeighbour(node17)
		
		node16.addFrontNeighbour(node14)
		node14.addFrontNeighbour(node12)
		node14.addFrontNeighbour(node4)
		node14.addFrontNeighbour(node5)
		node14.addConflictFrontNeighbour(node3)
		node14.addConflictFrontNeighbour(node11)
		node14.addConflictFrontNeighbour(node6)
		node12.addFrontNeighbour(node10)
		node10.addFrontNeighbour(node8)
		node10.addFrontNeighbour(node20)
		node10.addConflictFrontNeighbour(node18)
		node10.addConflictFrontNeighbour(node7)
		node8.addFrontNeighbour(node6)
		node6.addFrontNeighbour(node4)
		node6.addFrontNeighbour(node13)
		node6.addFrontNeighbour(node12)
		node6.addConflictFrontNeighbour(node14)
		node6.addConflictFrontNeighbour(node3)
		node6.addConflictFrontNeighbour(node11)
		node4.addFrontNeighbour(node2)
		node2.addFrontNeighbour(node19)
		node2.addFrontNeighbour(node16)
		node2.addConflictFrontNeighbour(node17)
		
		node17.addFrontNeighbour(node1)
		node17.addFrontNeighbour(node16)
		node17.addConflictFrontNeighbour(node15)
		node18.addFrontNeighbour(node9)
		node18.addFrontNeighbour(node8)
		node18.addConflictFrontNeighbour(node10)
		
		graph.addSpawnPoint(node17)
		graph.addSpawnPoint(node18)

		//---------------------------------------------------------------------------------------- //
		// ---------------Add environment object like StopSign, TrafficLight, MaxSpeedSign---------//
		//---------------------------------------------------------------------------------------- //
		var sign9 = new StopSign(200)
		node15.addObject(sign9)
		
		var tl3 = new TrafficLight(node3.getLength)
		graph.addTrafficLight(tl3)
		node3.addObject(tl3)
		var tl14 = new TrafficLight(node14.getLength,tl3,false)
		graph.addTrafficLight(tl14)
		node14.addObject(tl14)
		var tl6 = new TrafficLight(node6.getLength, tl3, true)
		graph.addTrafficLight(tl6)
		node6.addObject(tl6)
		var tl11 = new TrafficLight(node11.getLength, tl3, false)
		graph.addTrafficLight(tl11)
		node11.addObject(tl11)
		var tl7 = new TrafficLight(node7.getLength)
		graph.addTrafficLight(tl7)
		node7.addObject(tl7)
		var tl18 = new TrafficLight(node18.getLength, tl7, true)
		graph.addTrafficLight(tl18)
		node18.addObject(tl18)
		var tl10 = new TrafficLight(node10.getLength, tl7, false)
		graph.addTrafficLight(tl10)
		node10.addObject(tl10)

		var sign6 = new MaxSpeedSign(50, 30)
		node9.addObject(sign6)
		var sign2 = new MaxSpeedSign(200 + roadWidth, 90)
		node2.addObject(sign2)
		var sign5 = new MaxSpeedSign(150 - roadWidth, 50)
		node10.addObject(sign5)
		var sign7 = new MaxSpeedSign(200 + roadWidth, 50)
		node14.addObject(sign7)
		var sign8 = new MaxSpeedSign(200, 90)
		node13.addObject(sign8)
		var sign3 = new MaxSpeedSign(30, 30)
		node12.addObject(sign3)
		var sign4 = new MaxSpeedSign(370, 50)
		node11.addObject(sign4)
		var sign1 = new MaxSpeedSign(200, 50)
		node1.addObject(sign1)

		
		return graph
	}
}
