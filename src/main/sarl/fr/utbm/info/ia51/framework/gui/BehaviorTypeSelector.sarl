/* 
 * $Id$
 * 
 * Copyright (c) 2011-17 Stephane GALLAND <stephane.galland@utbm.fr>.
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 * This program is free software; you can redistribute it and/or modify
 */
package fr.utbm.info.ia51.framework.gui

import fr.utbm.info.ia51.framework.environment.DynamicType
import fr.utbm.info.ia51.framework.util.LocalizedString
import fr.utbm.info.ia51.framework.util.Resources
import java.awt.GridLayout
import javax.swing.ImageIcon
import javax.swing.JButton
import javax.swing.JDialog

/**
 * Dialog box for selecting the type of a behavior.
 * 
 * @author St&eacute;phane GALLAND &lt;stephane.galland@utbm.fr&gt;
 * @version $Name$ $Revision$ $Date$
 */
class BehaviorTypeSelector extends JDialog {
	
	var behaviorType : DynamicType = null

	/** Open the dialog box for selecting a type of behavior.
	 * 
	 * @return the selected type or <code>null</code> if the dialog box was manually closed.
	 */
	static def open : DynamicType {
		var selector = new BehaviorTypeSelector
		selector.visible = true
		var type = selector.selectedBehaviorType
		selector.dispose
		return type
	}
	
	protected new{
		this.title = LocalizedString::getString(BehaviorTypeSelector, "TITLE")
		this.modal = true
		
		this.layout = new GridLayout(2, 1)

		var imageUrl = Resources::getResource(BehaviorTypeSelector, "kinematic.png")
		var icon = new ImageIcon(imageUrl)
		var label = LocalizedString::getString(BehaviorTypeSelector, "KINEMATIC_BUTTON")
		var kinematicButton = new JButton(label, icon)
		kinematicButton.addActionListener [
			synchronized(this) {
				this.behaviorType = DynamicType.KINEMATIC
			}
			this.visible = false
		]
		add(kinematicButton)

		imageUrl = Resources::getResource(BehaviorTypeSelector, "steering.png")
		icon = new ImageIcon(imageUrl)
		label = LocalizedString::getString(BehaviorTypeSelector, "STEERING_BUTTON")
		var steeringButton = new JButton(label, icon)
		steeringButton.addActionListener [
			synchronized(this) {
				this.behaviorType = DynamicType.STEERING
			}
			this.visible = false
		]
		add(steeringButton)
		
		pack
		var d = getSize
		setLocation(-d.width / 2, -d.height / 2)
		this.locationRelativeTo = null
	}

	/** Replies the selected behavior type.
	 *
	 * @return the selected behavior type. It could be <code>null</code> if the user
	 * has close the dialog box without selecting a type.
	 */
	synchronized def getSelectedBehaviorType : DynamicType {
		this.behaviorType
	}

}