/* 
 * $Id$
 * 
 * Copyright (c) 2014-17 Stephane GALLAND <stephane.galland@utbm.fr>.
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 * This program is free software; you can redistribute it and/or modify
 */
package fr.utbm.info.ia51.framework.environment

import fr.utbm.info.ia51.framework.time.TimePercept
import java.util.List

/** This event contains percepts. 
 *
 * @author St&eacute;phane GALLAND &lt;stephane.galland@utbm.fr&gt;
 */
event PerceptionEvent {
	val body : Percept
	val time : TimePercept
	val perceptions : List<Percept>
	new (p : List<Percept>, b : Percept, t : TimePercept) {
		this.perceptions = p
		this.body = b
		this.time = t
	}
}

/** This event contains an influence 
 *
 * @author St&eacute;phane GALLAND &lt;stephane.galland@utbm.fr&gt;
 */
event InfluenceEvent {
	val influences : List<Influence>
	new (e : Influence*) {
		this.influences = e
	}
}

/** This event is fired when a simulation agent is ready. 
 *
 * @author St&eacute;phane GALLAND &lt;stephane.galland@utbm.fr&gt;
 */
event SimulationAgentReady

/** This event is for starting the simulation. 
 *
 * @author St&eacute;phane GALLAND &lt;stephane.galland@utbm.fr&gt;
 */
event StartSimulation

/** This event is for stopping the simulation. 
 *
 * @author St&eacute;phane GALLAND &lt;stephane.galland@utbm.fr&gt;
 */
event StopSimulation